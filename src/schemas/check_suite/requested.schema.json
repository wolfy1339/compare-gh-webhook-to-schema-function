{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "check_suite$requested",
  "title": "check_suite requested event",
  "type": "object",
  "properties": {
    "action": {
      "type": "string",
      "enum": [
        "requested"
      ]
    },
    "check_suite": {
      "description": "The [check_suite](https://docs.github.com/rest/checks/suites#get-a-check-suite).",
      "type": "object",
      "properties": {
        "after": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "app": {
          "title": "App",
          "description": "GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.",
          "type": "object",
          "properties": {
            "created_at": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ]
            },
            "description": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "events": {
              "description": "The list of events for the GitHub app",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "branch_protection_rule",
                  "check_run",
                  "check_suite",
                  "code_scanning_alert",
                  "commit_comment",
                  "content_reference",
                  "create",
                  "delete",
                  "deployment",
                  "deployment_review",
                  "deployment_status",
                  "deploy_key",
                  "discussion",
                  "discussion_comment",
                  "fork",
                  "gollum",
                  "issues",
                  "issue_comment",
                  "label",
                  "member",
                  "membership",
                  "milestone",
                  "organization",
                  "org_block",
                  "page_build",
                  "project",
                  "project_card",
                  "project_column",
                  "public",
                  "pull_request",
                  "pull_request_review",
                  "pull_request_review_comment",
                  "push",
                  "registry_package",
                  "release",
                  "repository",
                  "repository_dispatch",
                  "secret_scanning_alert",
                  "star",
                  "status",
                  "team",
                  "team_add",
                  "watch",
                  "workflow_dispatch",
                  "workflow_run",
                  "pull_request_review_thread",
                  "workflow_job",
                  "merge_queue_entry",
                  "security_and_analysis",
                  "secret_scanning_alert_location",
                  "projects_v2_item",
                  "merge_group",
                  "repository_import"
                ]
              }
            },
            "external_url": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "uri"
                },
                {
                  "type": "null"
                }
              ]
            },
            "html_url": {
              "type": "string",
              "format": "uri"
            },
            "id": {
              "oneOf": [
                {
                  "type": "integer",
                  "description": "Unique identifier of the GitHub app"
                },
                {
                  "type": "null"
                }
              ]
            },
            "client_id": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "Client ID of the GitHub app"
                },
                {
                  "type": "null"
                }
              ]
            },
            "name": {
              "description": "The name of the GitHub app",
              "type": "string"
            },
            "node_id": {
              "type": "string"
            },
            "owner": {
              "oneOf": [
                {
                  "type": "object",
                  "title": "User",
                  "properties": {
                    "avatar_url": {
                      "type": "string",
                      "format": "uri"
                    },
                    "deleted": {
                      "type": "boolean"
                    },
                    "email": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "events_url": {
                      "type": "string",
                      "format": "uri-template"
                    },
                    "followers_url": {
                      "type": "string",
                      "format": "uri"
                    },
                    "following_url": {
                      "type": "string",
                      "format": "uri-template"
                    },
                    "gists_url": {
                      "type": "string",
                      "format": "uri-template"
                    },
                    "gravatar_id": {
                      "type": "string"
                    },
                    "html_url": {
                      "type": "string",
                      "format": "uri"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "login": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "node_id": {
                      "type": "string"
                    },
                    "organizations_url": {
                      "type": "string",
                      "format": "uri"
                    },
                    "received_events_url": {
                      "type": "string",
                      "format": "uri"
                    },
                    "repos_url": {
                      "type": "string",
                      "format": "uri"
                    },
                    "site_admin": {
                      "type": "boolean"
                    },
                    "starred_url": {
                      "type": "string",
                      "format": "uri-template"
                    },
                    "subscriptions_url": {
                      "type": "string",
                      "format": "uri"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "Bot",
                        "User",
                        "Organization"
                      ]
                    },
                    "url": {
                      "type": "string",
                      "format": "uri"
                    },
                    "user_view_type": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "login",
                    "id"
                  ]
                },
                {
                  "type": "null"
                }
              ]
            },
            "permissions": {
              "description": "The set of permissions for the GitHub app",
              "type": "object",
              "properties": {
                "actions": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "administration": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "checks": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "content_references": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "contents": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "deployments": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "discussions": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "emails": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "environments": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "issues": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "keys": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "members": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "metadata": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "organization_administration": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "organization_hooks": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "organization_packages": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "organization_plan": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "organization_projects": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write",
                    "admin"
                  ]
                },
                "organization_secrets": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "organization_self_hosted_runners": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "organization_user_blocking": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "packages": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "pages": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "pull_requests": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "repository_hooks": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "repository_projects": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write",
                    "admin"
                  ]
                },
                "secret_scanning_alerts": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "secrets": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "security_events": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "security_scanning_alert": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "single_file": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "statuses": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "team_discussions": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "vulnerability_alerts": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                },
                "workflows": {
                  "type": "string",
                  "enum": [
                    "read",
                    "write"
                  ]
                }
              }
            },
            "slug": {
              "description": "The slug name of the GitHub app",
              "type": "string"
            },
            "updated_at": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "required": [
            "id",
            "node_id",
            "owner",
            "name",
            "description",
            "external_url",
            "html_url",
            "created_at",
            "updated_at"
          ]
        },
        "before": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "check_runs_url": {
          "type": "string",
          "format": "uri"
        },
        "conclusion": {
          "oneOf": [
            {
              "type": "string",
              "description": "The summary conclusion for all check runs that are part of the check suite. This value will be `null` until the check run has completed.",
              "enum": [
                "success",
                "failure",
                "neutral",
                "cancelled",
                "timed_out",
                "action_required",
                "stale",
                null,
                "skipped"
              ]
            },
            {
              "type": "null"
            }
          ]
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "head_branch": {
          "oneOf": [
            {
              "type": "string",
              "description": "The head branch name the changes are on."
            },
            {
              "type": "null"
            }
          ]
        },
        "head_commit": {
          "title": "SimpleCommit",
          "type": "object",
          "properties": {
            "author": {
              "title": "Committer",
              "description": "Metaproperties for Git author/committer information.",
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "email": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "email"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "name": {
                  "description": "The git author's name.",
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              },
              "required": [
                "email",
                "name"
              ]
            },
            "committer": {
              "title": "Committer",
              "description": "Metaproperties for Git author/committer information.",
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "email": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "email"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "name": {
                  "description": "The git author's name.",
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              },
              "required": [
                "email",
                "name"
              ]
            },
            "id": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "timestamp": {
              "type": "string"
            },
            "tree_id": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "tree_id",
            "message",
            "timestamp",
            "author",
            "committer"
          ]
        },
        "head_sha": {
          "description": "The SHA of the head commit that is being checked.",
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "latest_check_runs_count": {
          "type": "integer"
        },
        "node_id": {
          "type": "string"
        },
        "pull_requests": {
          "description": "An array of pull requests that match this check suite. A pull request matches a check suite if they have the same `head_sha` and `head_branch`. When the check suite's `head_branch` is in a forked repository it will be `null` and the `pull_requests` array will be empty.",
          "type": "array",
          "items": {
            "title": "Check Run Pull Request",
            "type": "object",
            "properties": {
              "base": {
                "type": "object",
                "properties": {
                  "ref": {
                    "type": "string"
                  },
                  "repo": {
                    "title": "Repo Ref",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "id",
                      "url",
                      "name"
                    ]
                  },
                  "sha": {
                    "type": "string"
                  }
                },
                "required": [
                  "ref",
                  "sha",
                  "repo"
                ]
              },
              "head": {
                "type": "object",
                "properties": {
                  "ref": {
                    "type": "string"
                  },
                  "repo": {
                    "title": "Repo Ref",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "id",
                      "url",
                      "name"
                    ]
                  },
                  "sha": {
                    "type": "string"
                  }
                },
                "required": [
                  "ref",
                  "sha",
                  "repo"
                ]
              },
              "id": {
                "type": "integer"
              },
              "number": {
                "type": "integer"
              },
              "url": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "url",
              "id",
              "number",
              "head",
              "base"
            ]
          }
        },
        "rerequestable": {
          "type": "boolean"
        },
        "runs_rerequestable": {
          "type": "boolean"
        },
        "status": {
          "oneOf": [
            {
              "type": "string",
              "description": "The summary status for all check runs that are part of the check suite. Can be `requested`, `in_progress`, or `completed`.",
              "enum": [
                "requested",
                "in_progress",
                "completed",
                "queued",
                null
              ]
            },
            {
              "type": "null"
            }
          ]
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "url": {
          "description": "URL that points to the check suite API resource.",
          "type": "string",
          "format": "uri"
        }
      },
      "required": [
        "id",
        "node_id",
        "head_branch",
        "head_sha",
        "status",
        "conclusion",
        "url",
        "before",
        "after",
        "pull_requests",
        "app",
        "created_at",
        "updated_at",
        "latest_check_runs_count",
        "check_runs_url",
        "head_commit"
      ]
    },
    "enterprise": {
      "$ref": "common/enterprise-webhooks.schema.json"
    },
    "installation": {
      "$ref": "common/simple-installation.schema.json"
    },
    "organization": {
      "$ref": "common/organization-simple-webhooks.schema.json"
    },
    "repository": {
      "$ref": "common/repository-webhooks.schema.json"
    },
    "sender": {
      "$ref": "common/simple-user.schema.json"
    }
  },
  "required": [
    "action",
    "check_suite",
    "repository",
    "sender"
  ],
  "additionalProperties": false
}
