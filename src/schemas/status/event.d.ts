import type {
  EnterpriseWebhooks, OrganizationSimple, RepositoryWebhooks, SimpleInstallation, SimpleUser 
} from '../common/index.d.ts';
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface StatusEvent {
  avatar_url?: string | null;
  /**
   * An array of branch objects containing the status' SHA. Each branch contains the given SHA, but the SHA may or may not be the head of the branch. The array includes a maximum of 10 branches.
   */
  branches: {
    commit: {
      sha: string | null,
      url: string | null
    },
    name: string,
    protected: boolean
  }[];
  commit: {
    author: {
      avatar_url?: string,
      deleted?: boolean,
      email?: string | null,
      events_url?: string,
      followers_url?: string,
      following_url?: string,
      gists_url?: string,
      gravatar_id?: string,
      html_url?: string,
      id?: number,
      login?: string,
      name?: string,
      node_id?: string,
      organizations_url?: string,
      received_events_url?: string,
      repos_url?: string,
      site_admin?: boolean,
      starred_url?: string,
      subscriptions_url?: string,
      type?: 'Bot' | 'User' | 'Organization',
      url?: string
    } | null,
    comments_url: string,
    commit: {
      author: {
        date?: string,
        email: string | null,
        /**
         * The git author's name.
         */
        name: string,
        username?: string
      } & {
        date: string,
        email?: string,
        name?: string
      },
      comment_count: number,
      committer: {
        date?: string,
        email: string | null,
        /**
         * The git author's name.
         */
        name: string,
        username?: string
      } & {
        date: string,
        email?: string,
        name?: string
      },
      message: string,
      tree: {
        sha: string,
        url: string
      },
      url: string,
      verification: {
        payload: string | null,
        reason:
          | 'expired_key'
          | 'not_signing_key'
          | 'gpgverify_error'
          | 'gpgverify_unavailable'
          | 'unsigned'
          | 'unknown_signature_type'
          | 'no_user'
          | 'unverified_email'
          | 'bad_email'
          | 'unknown_key'
          | 'malformed_signature'
          | 'invalid'
          | 'valid'
          | 'bad_cert'
          | 'ocsp_pending',
        signature: string | null,
        verified: boolean,
        verified_at: string | null
      }
    },
    committer: {
      avatar_url?: string,
      deleted?: boolean,
      email?: string | null,
      events_url?: string,
      followers_url?: string,
      following_url?: string,
      gists_url?: string,
      gravatar_id?: string,
      html_url?: string,
      id?: number,
      login?: string,
      name?: string,
      node_id?: string,
      organizations_url?: string,
      received_events_url?: string,
      repos_url?: string,
      site_admin?: boolean,
      starred_url?: string,
      subscriptions_url?: string,
      type?: 'Bot' | 'User' | 'Organization',
      url?: string
    } | null,
    html_url: string,
    node_id: string,
    parents: {
      html_url: string,
      sha: string,
      url: string
    }[],
    sha: string,
    url: string
  };
  context: string;
  created_at: string;
  /**
   * The optional human-readable description added to the status.
   */
  description: string | null;
  enterprise?: EnterpriseWebhooks;
  /**
   * The unique identifier of the status.
   */
  id: number;
  installation?: SimpleInstallation;
  name: string;
  organization?: OrganizationSimple;
  repository: RepositoryWebhooks;
  sender: SimpleUser;
  /**
   * The Commit SHA.
   */
  sha: string;
  /**
   * The new state. Can be `pending`, `success`, `failure`, or `error`.
   */
  state: 'pending' | 'success' | 'failure' | 'error';
  /**
   * The optional link added to the status.
   */
  target_url: string | null;
  updated_at: string;
}
