import type {
  Deployment, EnterpriseWebhooks, OrganizationSimple, RepositoryWebhooks, SimpleInstallation, SimpleUser 
} from '../common/index.d.ts';
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface WorkflowJobWaitingEvent {
  action: 'waiting';
  enterprise?: EnterpriseWebhooks;
  installation?: SimpleInstallation;
  organization?: OrganizationSimple;
  repository: RepositoryWebhooks;
  sender: SimpleUser;
  workflow_job: {
    check_run_url: string,
    completed_at: string | null,
    conclusion: string | null,
    /**
     * The time that the job created.
     */
    created_at: string,
    head_sha: string,
    html_url: string,
    id: number,
    labels: string[],
    name: string,
    node_id: string,
    run_attempt: number,
    run_id: number,
    run_url: string,
    runner_group_id: number | null,
    runner_group_name: string | null,
    runner_id: number | null,
    runner_name: string | null,
    started_at: string,
    head_branch: string | null,
    workflow_name: string | null,
    status: 'queued' | 'in_progress' | 'completed' | 'waiting',
    steps: {
      completed_at: string | null,
      conclusion:
        | ('failure' | 'skipped' | 'success' | 'cancelled' | null)
        | null,
      name: string,
      number: number,
      started_at: string | null,
      status: 'completed' | 'in_progress' | 'queued' | 'pending' | 'waiting'
    }[],
    url: string
  };
  deployment?: Deployment;
}
