import type {
  HookResponse, OrganizationSimple, RepositoryWebhooks, SimpleUser, WebhookConfigContentType, WebhookConfigInsecureSSL, WebhookConfigSecret, WebhookConfigUrl 
} from '../common/index.d.ts';
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PingEvent {
  /**
   * The webhook that is being pinged
   */
  hook?: {
    /**
     * Determines whether the hook is actually triggered for the events it subscribes to.
     */
    active: boolean,
    /**
     * Only included for GitHub Apps. When you register a new GitHub App, GitHub sends a ping event to the webhook URL you specified during registration. The GitHub App ID sent in this field is required for authenticating an app.
     */
    app_id?: number,
    config: {
      content_type?: WebhookConfigContentType,
      insecure_ssl?: WebhookConfigInsecureSSL,
      secret?: WebhookConfigSecret,
      url?: WebhookConfigUrl
    },
    created_at: string,
    deliveries_url?: string,
    /**
     * Determines what events the hook is triggered for. Default: ['push'].
     */
    events: string[],
    /**
     * Unique identifier of the webhook.
     */
    id: number,
    last_response?: HookResponse,
    /**
     * The type of webhook. The only valid value is 'web'.
     */
    name: 'web',
    ping_url?: string,
    test_url?: string,
    type: string,
    updated_at: string,
    url?: string
  };
  /**
   * The ID of the webhook that triggered the ping.
   */
  hook_id?: number;
  organization?: OrganizationSimple;
  repository?: RepositoryWebhooks;
  sender?: SimpleUser;
  /**
   * Random string of GitHub zen.
   */
  zen?: string;
}
