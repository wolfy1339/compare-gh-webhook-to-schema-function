import type { SimpleUser } from './index.d.ts';
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Details of a Personal Access Token Request.
 */
export interface PersonalAccessTokenRequest {
  /**
   * Unique identifier of the request for access via fine-grained personal access token. Used as the `pat_request_id` parameter in the list and review API calls.
   */
  id: number;
  owner: SimpleUser;
  /**
   * New requested permissions, categorized by type of permission.
   */
  permissions_added: {
    organization?: {
      [k: string]: string | undefined
    },
    repository?: {
      [k: string]: string | undefined
    },
    other?: {
      [k: string]: string | undefined
    }
  };
  /**
   * Requested permissions that elevate access for a previously approved request for access, categorized by type of permission.
   */
  permissions_upgraded: {
    organization?: {
      [k: string]: string | undefined
    },
    repository?: {
      [k: string]: string | undefined
    },
    other?: {
      [k: string]: string | undefined
    }
  };
  /**
   * Permissions requested, categorized by type of permission. This field incorporates `permissions_added` and `permissions_upgraded`.
   */
  permissions_result: {
    organization?: {
      [k: string]: string | undefined
    },
    repository?: {
      [k: string]: string | undefined
    },
    other?: {
      [k: string]: string | undefined
    }
  };
  /**
   * Type of repository selection requested.
   */
  repository_selection: 'none' | 'all' | 'subset';
  /**
   * The number of repositories the token is requesting access to. This field is only populated when `repository_selection` is `subset`.
   */
  repository_count: number | null;
  /**
   * An array of repository objects the token is requesting access to. This field is only populated when `repository_selection` is `subset`.
   */
  repositories:
    | {
      full_name: string,
      /**
       * Unique identifier of the repository
       */
      id: number,
      /**
       * The name of the repository.
       */
      name: string,
      node_id: string,
      /**
       * Whether the repository is private or public.
       */
      private: boolean
    }[]
    | null;
  /**
   * Date and time when the request for access was created.
   */
  created_at: string;
  /**
   * Unique identifier of the user's token. This field can also be found in audit log events and the organization's settings for their PAT grants.
   */
  token_id: number;
  /**
   * The name given to the user's token. This field can also be found in an organization's settings page for Active Tokens.
   */
  token_name: string;
  /**
   * Whether the associated fine-grained personal access token has expired.
   */
  token_expired: boolean;
  /**
   * Date and time when the associated fine-grained personal access token expires.
   */
  token_expires_at: string | null;
  /**
   * Date and time when the associated fine-grained personal access token was last used for authentication.
   */
  token_last_used_at: string | null;
}
