import type {
  EnterpriseWebhooks, OrganizationSimple, RepositoryWebhooks, SimpleInstallation, SimpleUser, WebhooksWorkflow 
} from '../common/index.d.ts';
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface WorkflowRunCompletedEvent {
  action: 'completed';
  enterprise?: EnterpriseWebhooks;
  installation?: SimpleInstallation;
  organization?: OrganizationSimple;
  repository: RepositoryWebhooks;
  sender: SimpleUser;
  workflow: WebhooksWorkflow;
  workflow_run: {
    actor: {
      avatar_url?: string,
      deleted?: boolean,
      email?: string | null,
      events_url?: string,
      followers_url?: string,
      following_url?: string,
      gists_url?: string,
      gravatar_id?: string,
      html_url?: string,
      id: number,
      login: string,
      name?: string,
      node_id?: string,
      organizations_url?: string,
      received_events_url?: string,
      repos_url?: string,
      site_admin?: boolean,
      starred_url?: string,
      subscriptions_url?: string,
      type?: 'Bot' | 'User' | 'Organization',
      url?: string,
      user_view_type?: string
    } | null,
    artifacts_url: string,
    cancel_url: string,
    check_suite_id: number,
    check_suite_node_id: string,
    check_suite_url: string,
    conclusion:
      | (
          | 'action_required'
          | 'cancelled'
          | 'failure'
          | 'neutral'
          | 'skipped'
          | 'stale'
          | 'success'
          | 'timed_out'
          | 'startup_failure'
          | null
        )
      | null,
    created_at: string,
    event: string,
    head_branch: string | null,
    head_commit: {
      /**
       * Metaproperties for Git author/committer information.
       */
      author: {
        date?: string,
        email: string | null,
        /**
         * The git author's name.
         */
        name: string,
        username?: string
      },
      /**
       * Metaproperties for Git author/committer information.
       */
      committer: {
        date?: string,
        email: string | null,
        /**
         * The git author's name.
         */
        name: string,
        username?: string
      },
      id: string,
      message: string,
      timestamp: string,
      tree_id: string
    },
    head_repository: {
      archive_url: string,
      assignees_url: string,
      blobs_url: string,
      branches_url: string,
      collaborators_url: string,
      comments_url: string,
      commits_url: string,
      compare_url: string,
      contents_url: string,
      contributors_url: string,
      deployments_url: string,
      description: string | null,
      downloads_url: string,
      events_url: string,
      fork: boolean,
      forks_url: string,
      full_name: string,
      git_commits_url: string,
      git_refs_url: string,
      git_tags_url: string,
      hooks_url: string,
      html_url: string,
      /**
       * Unique identifier of the repository
       */
      id: number,
      issue_comment_url: string,
      issue_events_url: string,
      issues_url: string,
      keys_url: string,
      labels_url: string,
      languages_url: string,
      merges_url: string,
      milestones_url: string,
      /**
       * The name of the repository.
       */
      name: string,
      node_id: string,
      notifications_url: string,
      owner: {
        avatar_url?: string,
        deleted?: boolean,
        email?: string | null,
        events_url?: string,
        followers_url?: string,
        following_url?: string,
        gists_url?: string,
        gravatar_id?: string,
        html_url?: string,
        id: number,
        login: string,
        name?: string,
        node_id?: string,
        organizations_url?: string,
        received_events_url?: string,
        repos_url?: string,
        site_admin?: boolean,
        starred_url?: string,
        subscriptions_url?: string,
        type?: 'Bot' | 'User' | 'Organization',
        url?: string,
        user_view_type?: string
      } | null,
      /**
       * Whether the repository is private or public.
       */
      private: boolean,
      pulls_url: string,
      releases_url: string,
      stargazers_url: string,
      statuses_url: string,
      subscribers_url: string,
      subscription_url: string,
      tags_url: string,
      teams_url: string,
      trees_url: string,
      url: string
    },
    head_sha: string,
    html_url: string,
    id: number,
    jobs_url: string,
    logs_url: string,
    name: string | null,
    node_id: string,
    path: string,
    previous_attempt_url: string | null,
    pull_requests: ({
      base: {
        ref: string,
        repo: {
          id: number,
          name: string,
          url: string
        },
        sha: string
      },
      head: {
        ref: string,
        repo: {
          id: number,
          name: string,
          url: string
        },
        sha: string
      },
      id: number,
      number: number,
      url: string
    } | null)[],
    referenced_workflows?:
      | {
        path: string,
        ref?: string,
        sha: string
      }[]
      | null,
    repository: {
      archive_url: string,
      assignees_url: string,
      blobs_url: string,
      branches_url: string,
      collaborators_url: string,
      comments_url: string,
      commits_url: string,
      compare_url: string,
      contents_url: string,
      contributors_url: string,
      deployments_url: string,
      description: string | null,
      downloads_url: string,
      events_url: string,
      fork: boolean,
      forks_url: string,
      full_name: string,
      git_commits_url: string,
      git_refs_url: string,
      git_tags_url: string,
      hooks_url: string,
      html_url: string,
      /**
       * Unique identifier of the repository
       */
      id: number,
      issue_comment_url: string,
      issue_events_url: string,
      issues_url: string,
      keys_url: string,
      labels_url: string,
      languages_url: string,
      merges_url: string,
      milestones_url: string,
      /**
       * The name of the repository.
       */
      name: string,
      node_id: string,
      notifications_url: string,
      owner: {
        avatar_url?: string,
        deleted?: boolean,
        email?: string | null,
        events_url?: string,
        followers_url?: string,
        following_url?: string,
        gists_url?: string,
        gravatar_id?: string,
        html_url?: string,
        id: number,
        login: string,
        name?: string,
        node_id?: string,
        organizations_url?: string,
        received_events_url?: string,
        repos_url?: string,
        site_admin?: boolean,
        starred_url?: string,
        subscriptions_url?: string,
        type?: 'Bot' | 'User' | 'Organization',
        url?: string,
        user_view_type?: string
      } | null,
      /**
       * Whether the repository is private or public.
       */
      private: boolean,
      pulls_url: string,
      releases_url: string,
      stargazers_url: string,
      statuses_url: string,
      subscribers_url: string,
      subscription_url: string,
      tags_url: string,
      teams_url: string,
      trees_url: string,
      url: string
    },
    rerun_url: string,
    run_attempt: number,
    run_number: number,
    run_started_at: string,
    status:
      | 'requested'
      | 'in_progress'
      | 'completed'
      | 'queued'
      | 'pending'
      | 'waiting',
    triggering_actor: {
      avatar_url?: string,
      deleted?: boolean,
      email?: string | null,
      events_url?: string,
      followers_url?: string,
      following_url?: string,
      gists_url?: string,
      gravatar_id?: string,
      html_url?: string,
      id: number,
      login: string,
      name?: string,
      node_id?: string,
      organizations_url?: string,
      received_events_url?: string,
      repos_url?: string,
      site_admin?: boolean,
      starred_url?: string,
      subscriptions_url?: string,
      type?: 'Bot' | 'User' | 'Organization',
      url?: string,
      user_view_type?: string
    } | null,
    updated_at: string,
    url: string,
    workflow_id: number,
    workflow_url: string,
    /**
     * The event-specific title associated with the run or the run-name if set, or the value of `run-name` if it is set in the workflow.
     */
    display_title?: string
  };
}
